version: 2.1

jobs:
  # Full tests
  test_python27_pytest:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run: sudo pip install -r requirements.txt
      - run: sudo python setup.py install
      - run: pytest -v -n 2 --durations=10 -m 'not slow'
  test_python35_pytest:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run: sudo pip install -r requirements.txt
      - run: sudo python setup.py install
      - run: pytest -v -n 2 --durations=10 -m 'not slow'
  test_python36_pytest:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo pip install -r requirements.txt
      - run: sudo python setup.py install
      - run: pytest -v -n 2 --durations=10 -m 'not slow'
  test_python37_pytest:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo pip install -r requirements.txt
      - run: sudo python setup.py install
      - run: pytest -v -n 2 --durations=10 -m 'not slow'

  # Quickly test that 'setup.py test' works
  test_python27_setup:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run: sudo python setup.py test --addopts "-v -k quad_df"
  test_python35_setup:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run: sudo python setup.py test --addopts "-v -k quad_df"
  test_python36_setup:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo python setup.py test --addopts "-v -k quad_df"
  test_python37_setup:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo python setup.py test --addopts "-v -k quad_df"


  build_docs:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo pip install -r requirements.txt
      - run: sudo pip install -r requirements_doc.txt
      - run: sudo python setup.py install
      - run:
          name: Build documentation
          command: |
            cd docs_src
            bash create_docs

      # Commit documentation
      - run:
          name: Commit documentation
          command: |
            git config --global user.email "robert.parini@gmail.com"
            git config --global user.name "Circle CI"
            git add .
            if git diff --cached --quiet ; then
              echo "No changes to documentation";
            else
              git commit -m "Update documentation via CircleCI";
              git push origin ${CIRCLE_BRANCH};
            fi


  build_README:
    docker:
      - image: circleci/python:3.6
    steps:
      # Build resources (eg. images) that README uses
      - checkout
      - run: sudo pip install -r requirements.txt
      - run: sudo pip install -r requirements_doc.txt
      - run: sudo python setup.py install
      - run:
          name: Build resources
          command: |
            cd README_resources
            bash create_resources

      # Commit README resources
      - run:
          name: Commit README resources and push
          command: |
            git config --global user.email "robert.parini@gmail.com"
            git config --global user.name "Circle CI"
            git add .
            if git diff --cached --quiet ; then
              echo "No changes to README resources";
            else
              git commit -m "Update README resources via CircleCI";
              git push origin ${CIRCLE_BRANCH};
            fi


  # Check that the long description (README.rst) will render correctly on PyPI
  twine_check:
    docker:
      - image: circleci/python:3.6
    steps:
      - run: sudo pip install twine
      - checkout
      - run: python setup.py sdist
      - run: python setup.py bdist_wheel
      - run: twine check dist/*


  # Deploy to PyPi
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - run: sudo pip install twine
      - checkout
      - run: python setup.py sdist
      - run: python setup.py bdist_wheel
      - run: twine upload dist/*


workflows:
  test-deploy:
    jobs:
      - test_python27_pytest
      - test_python27_setup:
          requires:
            - test_python27_pytest

      # - test_python35_pytest
      # - test_python35_setup:
      #     requires:
      #       - test_python35_pytest

      - test_python36_pytest
      - test_python36_setup:
          requires:
            - test_python36_pytest

      # - test_python37_pytest
      # - test_python37_setup:
      #     requires:
      #       - test_python37_pytest

      - build_README:
          requires:
            - test_python27_setup
            # - test_python35_setup
            - test_python36_setup
            # - test_python37_setup

      - build_docs:
          requires:
            - test_python27_setup
            # - test_python35_setup
            - test_python36_setup
            # - test_python37_setup

      - twine_check

      - deploy:
          requires:
            - twine_check
            - test_python27_setup
            # - test_python35_setup
            - test_python36_setup
            # - test_python37_setup
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master


